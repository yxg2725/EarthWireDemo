package com.huadin.earthwire.Model.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteStatement;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.Property;
import org.greenrobot.greendao.internal.DaoConfig;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.database.DatabaseStatement;

import com.huadin.earthwire.Model.dao.bean.EarthWire;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table "EARTH_WIRE".
*/
public class EarthWireDao extends AbstractDao<EarthWire, Long> {

    public static final String TABLENAME = "EARTH_WIRE";

    /**
     * Properties of entity EarthWire.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property Id = new Property(0, Long.class, "id", true, "_id");
        public final static Property StartTimeMillis = new Property(1, long.class, "startTimeMillis", false, "START_TIME_MILLIS");
        public final static Property PlanEndTime = new Property(2, long.class, "planEndTime", false, "PLAN_END_TIME");
        public final static Property RealEndTime = new Property(3, long.class, "realEndTime", false, "REAL_END_TIME");
        public final static Property GpsStyleID = new Property(4, String.class, "gpsStyleID", false, "GPS_STYLE_ID");
        public final static Property GpsStyle = new Property(5, String.class, "gpsStyle", false, "GPS_STYLE");
        public final static Property GpsIMEi = new Property(6, String.class, "gpsIMEi", false, "GPS_IMEI");
        public final static Property LocationInfo = new Property(7, String.class, "locationInfo", false, "LOCATION_INFO");
        public final static Property CurrentState = new Property(8, String.class, "currentState", false, "CURRENT_STATE");
        public final static Property ProjectName = new Property(9, String.class, "projectName", false, "PROJECT_NAME");
        public final static Property EarthWireId = new Property(10, String.class, "earthWireId", false, "EARTH_WIRE_ID");
    };


    public EarthWireDao(DaoConfig config) {
        super(config);
    }
    
    public EarthWireDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(Database db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "\"EARTH_WIRE\" (" + //
                "\"_id\" INTEGER PRIMARY KEY ," + // 0: id
                "\"START_TIME_MILLIS\" INTEGER NOT NULL ," + // 1: startTimeMillis
                "\"PLAN_END_TIME\" INTEGER NOT NULL ," + // 2: planEndTime
                "\"REAL_END_TIME\" INTEGER NOT NULL ," + // 3: realEndTime
                "\"GPS_STYLE_ID\" TEXT," + // 4: gpsStyleID
                "\"GPS_STYLE\" TEXT," + // 5: gpsStyle
                "\"GPS_IMEI\" TEXT," + // 6: gpsIMEi
                "\"LOCATION_INFO\" TEXT," + // 7: locationInfo
                "\"CURRENT_STATE\" TEXT," + // 8: currentState
                "\"PROJECT_NAME\" TEXT," + // 9: projectName
                "\"EARTH_WIRE_ID\" TEXT);"); // 10: earthWireId
    }

    /** Drops the underlying database table. */
    public static void dropTable(Database db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "\"EARTH_WIRE\"";
        db.execSQL(sql);
    }

    @Override
    protected final void bindValues(DatabaseStatement stmt, EarthWire entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getStartTimeMillis());
        stmt.bindLong(3, entity.getPlanEndTime());
        stmt.bindLong(4, entity.getRealEndTime());
 
        String gpsStyleID = entity.getGpsStyleID();
        if (gpsStyleID != null) {
            stmt.bindString(5, gpsStyleID);
        }
 
        String gpsStyle = entity.getGpsStyle();
        if (gpsStyle != null) {
            stmt.bindString(6, gpsStyle);
        }
 
        String gpsIMEi = entity.getGpsIMEi();
        if (gpsIMEi != null) {
            stmt.bindString(7, gpsIMEi);
        }
 
        String locationInfo = entity.getLocationInfo();
        if (locationInfo != null) {
            stmt.bindString(8, locationInfo);
        }
 
        String currentState = entity.getCurrentState();
        if (currentState != null) {
            stmt.bindString(9, currentState);
        }
 
        String projectName = entity.getProjectName();
        if (projectName != null) {
            stmt.bindString(10, projectName);
        }
 
        String earthWireId = entity.getEarthWireId();
        if (earthWireId != null) {
            stmt.bindString(11, earthWireId);
        }
    }

    @Override
    protected final void bindValues(SQLiteStatement stmt, EarthWire entity) {
        stmt.clearBindings();
 
        Long id = entity.getId();
        if (id != null) {
            stmt.bindLong(1, id);
        }
        stmt.bindLong(2, entity.getStartTimeMillis());
        stmt.bindLong(3, entity.getPlanEndTime());
        stmt.bindLong(4, entity.getRealEndTime());
 
        String gpsStyleID = entity.getGpsStyleID();
        if (gpsStyleID != null) {
            stmt.bindString(5, gpsStyleID);
        }
 
        String gpsStyle = entity.getGpsStyle();
        if (gpsStyle != null) {
            stmt.bindString(6, gpsStyle);
        }
 
        String gpsIMEi = entity.getGpsIMEi();
        if (gpsIMEi != null) {
            stmt.bindString(7, gpsIMEi);
        }
 
        String locationInfo = entity.getLocationInfo();
        if (locationInfo != null) {
            stmt.bindString(8, locationInfo);
        }
 
        String currentState = entity.getCurrentState();
        if (currentState != null) {
            stmt.bindString(9, currentState);
        }
 
        String projectName = entity.getProjectName();
        if (projectName != null) {
            stmt.bindString(10, projectName);
        }
 
        String earthWireId = entity.getEarthWireId();
        if (earthWireId != null) {
            stmt.bindString(11, earthWireId);
        }
    }

    @Override
    public Long readKey(Cursor cursor, int offset) {
        return cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0);
    }    

    @Override
    public EarthWire readEntity(Cursor cursor, int offset) {
        EarthWire entity = new EarthWire( //
            cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), // id
            cursor.getLong(offset + 1), // startTimeMillis
            cursor.getLong(offset + 2), // planEndTime
            cursor.getLong(offset + 3), // realEndTime
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // gpsStyleID
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // gpsStyle
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // gpsIMEi
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // locationInfo
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // currentState
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // projectName
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10) // earthWireId
        );
        return entity;
    }
     
    @Override
    public void readEntity(Cursor cursor, EarthWire entity, int offset) {
        entity.setId(cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0));
        entity.setStartTimeMillis(cursor.getLong(offset + 1));
        entity.setPlanEndTime(cursor.getLong(offset + 2));
        entity.setRealEndTime(cursor.getLong(offset + 3));
        entity.setGpsStyleID(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGpsStyle(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGpsIMEi(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setLocationInfo(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setCurrentState(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setProjectName(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setEarthWireId(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
     }
    
    @Override
    protected final Long updateKeyAfterInsert(EarthWire entity, long rowId) {
        entity.setId(rowId);
        return rowId;
    }
    
    @Override
    public Long getKey(EarthWire entity) {
        if(entity != null) {
            return entity.getId();
        } else {
            return null;
        }
    }

    @Override
    protected final boolean isEntityUpdateable() {
        return true;
    }
    
}
